service: goodoc-untact-scrapper-v2

frameworkVersion: "2"

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  profile: dany
  region: ap-northeast-2

plugins:
  - serverless-appsync-plugin

custom:
  appSync:
    name: goodoc-untact-scrapper-v2
    authenticationType: AMAZON_COGNITO_USER_POOLS
    userPoolConfig:
      awsRegion: ap-northeast-2
      defaultAction: ALLOW
      userPoolId: { Ref: ScrapperUserPool }
    region: ap-northeast-2
    mappingTemplatesLocation: resolvers
    mappingTemplates:
      # User
      - 
        type: User
        field: scrappers
        dataSource: Scrapper
      -
        type: Query
        field: getUserList
        dataSource: User
      - 
        type: Query
        field: getUser
        dataSource: User
      - 
        type: Mutation
        field: createUser
        dataSource: User

      # Scrapper
      - 
        type: Scrapper
        field: user
        dataSource: User
      -
        type: Query
        field: getScrapper
        dataSource: Scrapper
      - 
        type: Mutation
        field: createScrapper
        dataSource: Scrapper
        
    schema:
      - schema/user.graphql
      - schema/scrapper.graphql
    
    #serviceRole: # if not provided, a default role is generated
    dataSources:
      - type: AMAZON_DYNAMODB
        name: User
        description: User Table
        config:
          tableName: goodoc-scrapper-user
          iamRoleStatements:
            - Effect: Allow
              Action:
                - dynamodb:*
              Resource:
                - arn:aws:dynamodb:${self:provider.region}:*:table/goodoc-scrapper-user
                - arn:aws:dynamodb:${self:provider.region}:*:table/goodoc-scrapper-user/*

      - type: AMAZON_DYNAMODB
        name: Scrapper
        description: Scrapper Table
        config:
          tableName: goodoc-scrapper-scrapper
          iamRoleStatements:
            - Effect: Allow
              Action:
                - dynamodb:*
              Resource:
                - arn:aws:dynamodb:${self:provider.region}:*:table/goodoc-scrapper-scrapper
                - arn:aws:dynamodb:${self:provider.region}:*:table/goodoc-scrapper-scrapper/*

resources:
  Resources:
    ScrapperUserPool:
      Type: AWS::Cognito::UserPool
      DeletionPolicy: Retain
      Properties:
        UserPoolName: ScrapperUserPool
        AutoVerifiedAttributes:
          - email
        Policies:
          PasswordPolicy:
            MinimumLength: 8
        UsernameAttributes:
          - email

    AppSyncTutorialUserPoolWebClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
          ClientName: Web
          GenerateSecret: false
          RefreshTokenValidity: 30
          UserPoolId: { Ref: ScrapperUserPool }


    UserTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: goodoc-scrapper-user
        KeySchema:
          -
            AttributeName: userId
            KeyType: HASH
        AttributeDefinitions:
          -
            AttributeName: userId
            AttributeType: S
        BillingMode: PAY_PER_REQUEST

    ScrapperTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: goodoc-scrapper-scrapper
        KeySchema:
          -
            AttributeName: scrapperId
            KeyType: HASH
        AttributeDefinitions:
          -
            AttributeName: scrapperId
            AttributeType: S
          -
            AttributeName: userId
            AttributeType: S
        BillingMode: PAY_PER_REQUEST

        # GSI - userId
        GlobalSecondaryIndexes:
          -
            IndexName: userId-index
            KeySchema:
              - AttributeName: userId
                KeyType: HASH
              - AttributeName: scrapperId
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
